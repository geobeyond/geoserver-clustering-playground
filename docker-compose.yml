version: '3.9'

networks:
  geocluster:

services:
  ### PostgreSQL 
  db:
    image: kartoza/postgis:14-3.1
    volumes:
      - ./pg_data:/var/lib/postgresql
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - FORCE_SSL=FALSE
    ports:
      - 5455:5432
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d gis"
    networks:
      - geocluster
  ### Active-MQ 
  geobroker:
    image: kartoza/activemq-docker:2.20.6
    build:
      context: ./scripts/docker/build/activemq
      dockerfile: Dockerfile
    environment:
      - JAVA_HOME=/opt/java/openjdk
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - SSL_MODE=false
      - ACTIVEMQ_SERVER_URI=tcp://0.0.0.0:61616?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=false&transport.daemon=true
      - ACTIVEMQ_SERVER_DISCOVERYURI=multicast://default
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8161:8161
      - 61616:61616
    healthcheck:
      test: netstat -ltn | grep -c ":61616"
      interval: 60s
      timeout: 15s
      retries: 10
    networks:
      - geocluster
  ### Geoserver-1
  gs-node1:
    image: geobeyond/geoserver:2.20.6.patched
    volumes:
      - ./geo_data:/opt/geoserver/data_dir_shared
    ports:
      - "8081:8080"
    environment:
      - BROKER_URL=tcp://geobroker:61616
      - GEOSERVER_ADMIN_PASSWORD=Geo$$erver1!
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir_shared
      - STABLE_EXTENSIONS=oracle-plugin,importer-plugin
      - COMMUNITY_EXTENSIONS=sec-oauth2-openid-connect-plugin
      - RESET_ADMIN_CREDENTIALS=TRUE
      - READONLY=disabled
      - CLUSTER_DURABILITY=false
      - CLUSTERING=True
      - TOGGLE_MASTER=true
      - TOGGLE_SLAVE=true
      - EMBEDDED_BROKER=disabled
      - CLUSTER_CONNECTION_RETRY_COUNT=10
      - CLUSTER_CONNECTION_MAX_WAIT=500
      - DB_BACKEND=POSTGRES
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - SSL_MODE=allow
      - RANDOMSTRING=23bd87cfa327d47e-node1
      - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-node1
      - EXISTING_DATA_DIR=false
      - SAMPLE_DATA=false
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      geobroker:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://127.0.0.1:8080/geoserver/web || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 100s
    networks:
      - geocluster
  ### Geoserver-2
  gs-node2:
    image: geobeyond/geoserver:2.20.6.patched
    volumes:
      - ./geo_data:/opt/geoserver/data_dir_shared
    ports:
      - "8082:8080"
    environment:
      - BROKER_URL=tcp://geobroker:61616
      - GEOSERVER_ADMIN_PASSWORD=Geo$$erver1!
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir_shared
      - STABLE_EXTENSIONS=oracle-plugin,importer-plugin
      - COMMUNITY_EXTENSIONS=sec-oauth2-openid-connect-plugin
      - RESET_ADMIN_CREDENTIALS=TRUE
      - READONLY=disabled
      - CLUSTER_DURABILITY=false
      - CLUSTERING=True
      - TOGGLE_MASTER=true
      - TOGGLE_SLAVE=true
      - EMBEDDED_BROKER=disabled
      - CLUSTER_CONNECTION_RETRY_COUNT=10
      - CLUSTER_CONNECTION_MAX_WAIT=500
      - DB_BACKEND=POSTGRES
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - SSL_MODE=allow
      - RANDOMSTRING=23bd87cfa327d47e-node2
      - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-node2
      - EXISTING_DATA_DIR=false
      - SAMPLE_DATA=false
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      gs-node1:
        condition: service_healthy
      geobroker:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://127.0.0.1:8080/geoserver/web || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 100s
    networks:
      - geocluster
  ### Geoserver-3
  gs-node3:
    image: geobeyond/geoserver:2.20.6.patched
    volumes:
      - ./geo_data:/opt/geoserver/data_dir_shared
    ports:
      - "8083:8080"
    environment:
      - BROKER_URL=tcp://geobroker:61616
      - GEOSERVER_ADMIN_PASSWORD=Geo$$erver1!
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir_shared
      - STABLE_EXTENSIONS=oracle-plugin,importer-plugin
      - COMMUNITY_EXTENSIONS=sec-oauth2-openid-connect-plugin
      - RESET_ADMIN_CREDENTIALS=TRUE
      - READONLY=disabled
      - CLUSTER_DURABILITY=false
      - CLUSTERING=True
      - TOGGLE_MASTER=true
      - TOGGLE_SLAVE=true
      - EMBEDDED_BROKER=disabled
      - CLUSTER_CONNECTION_RETRY_COUNT=10
      - CLUSTER_CONNECTION_MAX_WAIT=500
      - DB_BACKEND=POSTGRES
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - SSL_MODE=allow
      - RANDOMSTRING=23bd87cfa327d47e-node3
      - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-node3
      - EXISTING_DATA_DIR=false
      - SAMPLE_DATA=false
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      gs-node1:
        condition: service_healthy
      gs-node2:
        condition: service_healthy
      geobroker:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://127.0.0.1:8080/geoserver/web || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 100s
    networks:
        - geocluster
  ### Load balancer
  caddy:
    image: caddy:latest
    build:
      context: ./scripts/docker/build/caddy
      dockerfile: Dockerfile
    ports:
      - 9001:9001
      - 80:80
      - 443:443
    healthcheck:
      test: curl --fail -s http://localhost || exit 1
      interval: 1m
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
        gs-node1:
          condition: service_healthy
        gs-node2:
          condition: service_healthy
        gs-node3:
          condition: service_healthy
        geobroker:
          condition: service_healthy
    networks:
      - geocluster
